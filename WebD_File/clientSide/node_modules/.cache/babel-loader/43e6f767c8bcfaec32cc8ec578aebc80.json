{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\Invincible-master\\\\Invincible-master\\\\clientSide\\\\src\\\\components\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useState } from \"react\";\nimport \"./LandingPage.css\";\nimport { history } from \"../../helpers/history\";\nimport { useSelector } from \"react-redux\";\nimport WebcamOrFile from \"../WebcamOrFile/WebcamOrFile\";\nimport WebcamCapture from \"../WebcamCapture/WebcamCapture\";\nimport SizeForm from \"../SizeForm/SizeForm\";\nimport SizeChart from \"../SizeChart/SizeChart\";\nimport Loader from \"../Loader/Loader\";\n\nfunction LandingPage() {\n  let isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  let [webcamIsOn, setWebcamIsOn] = useState(false);\n  let [capture, setCapture] = useState(false);\n  let [captureDone, setCaptureDone] = useState(false);\n  let [input, setInput] = useState(false);\n  let [inputDone, setInputDone] = useState(false);\n  let [displayLoader, setDisplayLoader] = useState(false);\n\n  const handleMeasureSize = event => {\n    event.preventDefault();\n\n    if (isAuthenticated) {\n      setCapture(true);\n    } else {\n      history.push(\"/auth\");\n    }\n  };\n\n  const handleInputMeasure = event => {\n    event.preventDefault();\n\n    if (isAuthenticated) {\n      setInput(true);\n    }\n  }; //helper fuction for closing the trial room pop-up\n\n\n  const handleCleanUp = () => {\n    setCapture(false);\n    setWebcamIsOn(false);\n    setCaptureDone(false);\n    setDisplayLoader(false);\n  }; //closing the trial room pop-up\n\n\n  const handleCaptureClose = event => {\n    event.preventDefault();\n    handleCleanUp();\n  }; //event handler for switiching on the webcam\n\n\n  const handleSwitichingOnWebCam = event => {\n    event.preventDefault();\n    setWebcamIsOn(true);\n    setCapture(false);\n  };\n\n  const handleInputClose = event => {\n    event.preventDefault();\n    setInput(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-material\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"landing-page-title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Virtual Trial Room\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"and\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Size Assist\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleMeasureSize,\n    className: \"product-btn trial-room-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"measure size\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"input-Measure-Btn\",\n    onClick: handleInputMeasure,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Input Measurements\")))), (capture || webcamIsOn || captureDone || displayLoader || input) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-trial-room\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), input && /*#__PURE__*/React.createElement(SizeForm, {\n    handleInputClose: handleInputClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), capture && /*#__PURE__*/React.createElement(WebcamOrFile, {\n    handleCaptureClose: handleCaptureClose,\n    handleSwitichingOnWebCam: handleSwitichingOnWebCam,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), webcamIsOn && /*#__PURE__*/React.createElement(WebcamCapture, {\n    handleCaptureClose: handleCaptureClose,\n    handleCleanUp: handleCleanUp,\n    setCaptureDone: setCaptureDone,\n    setDisplayLoader: setDisplayLoader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), displayLoader && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), captureDone && /*#__PURE__*/React.createElement(SizeChart, {\n    handleCleanUp: handleCleanUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 23\n    }\n  }));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/Invincible-master/Invincible-master/clientSide/src/components/LandingPage/LandingPage.js"],"names":["React","useState","history","useSelector","WebcamOrFile","WebcamCapture","SizeForm","SizeChart","Loader","LandingPage","isAuthenticated","state","auth","webcamIsOn","setWebcamIsOn","capture","setCapture","captureDone","setCaptureDone","input","setInput","inputDone","setInputDone","displayLoader","setDisplayLoader","handleMeasureSize","event","preventDefault","push","handleInputMeasure","handleCleanUp","handleCaptureClose","handleSwitichingOnWebCam","handleInputClose"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,WAAT,GAAuB;AACrB,MAAIC,eAAe,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,eAAvB,CAAjC;AACA,MAAI,CAACG,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAApC;AACA,MAAI,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAI,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAI,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAI,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMwB,iBAAiB,GAAIC,KAAD,IAAW;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIjB,eAAJ,EAAqB;AACnBM,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD,MAEO;AACLd,MAAAA,OAAO,CAAC0B,IAAR,CAAa,OAAb;AACD;AACF,GAPD;;AASA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIjB,eAAJ,EAAoB;AAChBU,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACF,GALD,CAlBqB,CAyBrB;;;AACA,QAAMU,aAAa,GAAG,MAAM;AAC1Bd,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAM,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GALD,CA1BqB,CAiCrB;;;AACA,QAAMO,kBAAkB,GAAIL,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACAG,IAAAA,aAAa;AACd,GAHD,CAlCqB,CAuCrB;;;AACA,QAAME,wBAAwB,GAAIN,KAAD,IAAW;AAC1CA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAJD;;AAMA,QAAMiB,gBAAgB,GAAIP,KAAD,IAAU;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,eAGE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF,eAOE;AACE,IAAA,OAAO,EAAEK,iBADX;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE;AACA,IAAA,SAAS,EAAC,mBADV;AAEA,IAAA,OAAO,EAAEI,kBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbF,CADF,CADF,CADF,EAwBG,CAACd,OAAO,IAAIF,UAAX,IAAyBI,WAAzB,IAAwCM,aAAxC,IAAyDJ,KAA1D,kBACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,EA4BGA,KAAK,iBACJ,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAEc,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,EAgCGlB,OAAO,iBACN,oBAAC,YAAD;AACE,IAAA,kBAAkB,EAAEgB,kBADtB;AAEE,IAAA,wBAAwB,EAAEC,wBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCJ,EAsCGnB,UAAU,iBACT,oBAAC,aAAD;AACE,IAAA,kBAAkB,EAAEkB,kBADtB;AAEE,IAAA,aAAa,EAAED,aAFjB;AAGE,IAAA,cAAc,EAAEZ,cAHlB;AAIE,IAAA,gBAAgB,EAAEM,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EA8CGD,aAAa,iBAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CpB,EA+CGN,WAAW,iBAAI,oBAAC,SAAD;AAAW,IAAA,aAAa,EAAEa,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/ClB,CADF;AAmDD;;AAED,eAAerB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./LandingPage.css\";\nimport { history } from \"../../helpers/history\";\nimport { useSelector } from \"react-redux\";\nimport WebcamOrFile from \"../WebcamOrFile/WebcamOrFile\";\nimport WebcamCapture from \"../WebcamCapture/WebcamCapture\";\nimport SizeForm from \"../SizeForm/SizeForm\";\nimport SizeChart from \"../SizeChart/SizeChart\";\nimport Loader from \"../Loader/Loader\";\n\nfunction LandingPage() {\n  let isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  let [webcamIsOn, setWebcamIsOn] = useState(false);\n  let [capture, setCapture] = useState(false);\n  let [captureDone, setCaptureDone] = useState(false);\n  let [input, setInput] = useState(false);\n  let [inputDone, setInputDone] = useState(false);\n  let [displayLoader, setDisplayLoader] = useState(false);\n\n  const handleMeasureSize = (event) => {\n    event.preventDefault();\n    if (isAuthenticated) {\n      setCapture(true);\n    } else {\n      history.push(\"/auth\");\n    }\n  };\n\n  const handleInputMeasure = (event) => {\n    event.preventDefault();\n    if (isAuthenticated){\n        setInput(true);\n    }\n  }\n\n  //helper fuction for closing the trial room pop-up\n  const handleCleanUp = () => {\n    setCapture(false);\n    setWebcamIsOn(false);\n    setCaptureDone(false);\n    setDisplayLoader(false);\n  };\n\n  //closing the trial room pop-up\n  const handleCaptureClose = (event) => {\n    event.preventDefault();\n    handleCleanUp();\n  };\n\n  //event handler for switiching on the webcam\n  const handleSwitichingOnWebCam = (event) => {\n    event.preventDefault();\n    setWebcamIsOn(true);\n    setCapture(false);\n  };\n\n  const handleInputClose = (event) =>{\n    event.preventDefault();\n    setInput(false);\n  }\n\n  return (\n    <>\n      <div className=\"landing-page-container\">\n        <div className=\"landing-page-overlay\">\n          <div className=\"landing-page-material\">\n            <div className=\"landing-page-title-container\">\n              <h1 className=\"title1\">Virtual Trial Room</h1>\n              <h2>and</h2>\n              <h1 className=\"title1\">Size Assist</h1>\n            </div>\n\n            <button\n              onClick={handleMeasureSize}\n              className=\"product-btn trial-room-btn\"\n            >\n              measure size\n            </button>\n            <button \n            className=\"input-Measure-Btn\"\n            onClick={handleInputMeasure} \n            >Input Measurements</button>\n          </div>\n        </div>\n      </div>\n\n      {(capture || webcamIsOn || captureDone || displayLoader || input) && (\n        <div className=\"overlay-trial-room\"></div>\n      )}\n\n      {input && (\n        <SizeForm handleInputClose={handleInputClose}/>\n      )}\n\n      {capture && (\n        <WebcamOrFile\n          handleCaptureClose={handleCaptureClose}\n          handleSwitichingOnWebCam={handleSwitichingOnWebCam}\n        />\n      )}\n      {webcamIsOn && (\n        <WebcamCapture\n          handleCaptureClose={handleCaptureClose}\n          handleCleanUp={handleCleanUp}\n          setCaptureDone={setCaptureDone}\n          setDisplayLoader={setDisplayLoader}\n        />\n      )}\n      {displayLoader && <Loader />}\n      {captureDone && <SizeChart handleCleanUp={handleCleanUp} />}\n    </>\n  );\n}\n\nexport default LandingPage;\n"]},"metadata":{},"sourceType":"module"}