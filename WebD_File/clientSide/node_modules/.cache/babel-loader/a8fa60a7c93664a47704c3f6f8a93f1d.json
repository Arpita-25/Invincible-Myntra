{"ast":null,"code":"import { act } from '@testing-library/react';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, INPUT_SUCCESS, INPUT_FAIL } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  user: null,\n  isLoading: false\n};\nexport default function authReducers(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case INPUT_SUCCESS:\n      return { ...state,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      return {\n        isAuthenticated: false,\n        isLoading: false,\n        user: null,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Downloads/Invincible-master/Invincible-master/clientSide/src/redux/reducers/authReducers.js"],"names":["act","USER_LOADED","USER_LOADING","AUTH_ERROR","REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","INPUT_SUCCESS","INPUT_FAIL","initialState","token","localStorage","getItem","isAuthenticated","user","isLoading","authReducers","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SAASA,GAAT,QAAoB,wBAApB;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,EAIIC,aAJJ,EAKIC,gBALJ,EAMIC,aANJ,EAOIC,UAPJ,EAQIC,cARJ,EASIC,aATJ,EAUIC,UAVJ,QAWQ,kBAXR;AAaA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADS;AAEhBC,EAAAA,eAAe,EAAG,IAFF;AAGhBC,EAAAA,IAAI,EAAC,IAHW;AAIhBC,EAAAA,SAAS,EAAC;AAJM,CAApB;AAOA,eAAe,SAASC,YAAT,CAAuBC,KAAK,GAAER,YAA9B,EAA2CS,MAA3C,EAAkD;AAE7D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKnB,YAAL;AAAkB,aAAO,EACrB,GAAGiB,KADkB;AAErBF,QAAAA,SAAS,EAAC;AAFW,OAAP;;AAKlB,SAAKhB,WAAL;AAAmB,aAAM,EACrB,GAAGkB,KADkB;AAErBH,QAAAA,IAAI,EAACI,MAAM,CAACE,OAFS;AAGrBP,QAAAA,eAAe,EAAC,IAHK;AAIrBE,QAAAA,SAAS,EAAC;AAJW,OAAN;;AAOnB,SAAKR,aAAL;AAAqB,aAAM,EACvB,GAAGU,KADoB;AAEvBH,QAAAA,IAAI,EAACI,MAAM,CAACE;AAFW,OAAN;;AAKrB,SAAKhB,aAAL;AACA,SAAKD,gBAAL;AACIQ,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA6BH,MAAM,CAACE,OAAP,CAAeV,KAA5C;AACA,aAAM,EACF,GAAGO,KADD;AAEF,WAAGC,MAAM,CAACE,OAFR;AAGFP,QAAAA,eAAe,EAAC,IAHd;AAIFE,QAAAA,SAAS,EAAC;AAJR,OAAN;;AAOJ,SAAKd,UAAL;AACA,SAAKC,aAAL;AACA,SAAKG,UAAL;AACA,SAAKC,cAAL;AACIK,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACA,aAAO;AACHT,QAAAA,eAAe,EAAC,KADb;AAEHE,QAAAA,SAAS,EAAC,KAFP;AAGHD,QAAAA,IAAI,EAAC,IAHF;AAIHJ,QAAAA,KAAK,EAAE;AAJJ,OAAP;;AAMJ;AAAU,aAAOO,KAAP;AAvCd;AAyCH","sourcesContent":["import { act } from '@testing-library/react'\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    INPUT_SUCCESS,\n    INPUT_FAIL\n}  from '../actions/types'\n\nconst initialState ={\n    token :localStorage.getItem('token'),\n    isAuthenticated : null,\n    user:null,\n    isLoading:false\n}\n\nexport default function authReducers (state= initialState,action){\n\n    switch(action.type){\n        case USER_LOADING:return {\n            ...state,\n            isLoading:true\n        }\n\n        case USER_LOADED : return{\n            ...state,\n            user:action.payload,\n            isAuthenticated:true,\n            isLoading:false\n        }\n\n        case INPUT_SUCCESS : return{\n            ...state,\n            user:action.payload\n        }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token',action.payload.token)\n            return{\n                ...state,\n                ...action.payload,\n                isAuthenticated:true,\n                isLoading:false\n            }\n        \n        case AUTH_ERROR : \n        case REGISTER_FAIL : \n        case LOGIN_FAIL :\n        case LOGOUT_SUCCESS : \n            localStorage.removeItem('token');\n            return {\n                isAuthenticated:false,\n                isLoading:false,\n                user:null,\n                token: null\n            }\n        default : return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}